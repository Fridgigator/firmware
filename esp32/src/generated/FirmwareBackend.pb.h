/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6 */

#ifndef PB_FIRMWAREBACKEND_PB_H_INCLUDED
#define PB_FIRMWAREBACKEND_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _AddSensorInfo_DEVICE_TYPE { 
    AddSensorInfo_DEVICE_TYPE_TI = 0, 
    AddSensorInfo_DEVICE_TYPE_NORDIC = 1, 
    AddSensorInfo_DEVICE_TYPE_CUSTOM = 2 
} AddSensorInfo_DEVICE_TYPE;

/* Struct definitions */
typedef struct _ClearSensorList { 
    char dummy_field;
} ClearSensorList;

typedef struct _GetSensorsList { 
    char dummy_field;
} GetSensorsList;

typedef struct _SensorsStart { 
    char dummy_field;
} SensorsStart;

typedef struct _SensorsStop { 
    char dummy_field;
} SensorsStop;

typedef struct _Ack { 
    int64_t id;
} Ack;

typedef struct _SensorInfo { 
    char address[21];
    char name[32];
} SensorInfo;

typedef struct _UUID { 
    char uuid[37];
} UUID;

typedef struct _AddSensorInfo { 
    bool has_sensor_info;
    SensorInfo sensor_info;
    AddSensorInfo_DEVICE_TYPE device_type;
} AddSensorInfo;

typedef struct _Registration { 
    bool has_uuid_self;
    UUID uuid_self;
    bool has_uuid_user;
    UUID uuid_user;
} Registration;

typedef struct _SensorData { 
    char origin_address[13];
    pb_size_t middle_uuids_count;
    UUID middle_uuids[64];
    pb_size_t which_type;
    union {
        float temp;
        float humidity;
    } type;
} SensorData;

typedef struct _SensorsList { 
    pb_size_t sensor_info_count;
    SensorInfo sensor_info[64];
} SensorsList;

typedef struct _AddSensor { 
    pb_size_t add_sensor_info_count;
    AddSensorInfo add_sensor_info[64];
} AddSensor;

typedef struct _FirmwareToBackendPacket { 
    pb_size_t which_type;
    union {
        SensorData sensor_data;
        SensorsList sensors_list;
        Registration registration;
    } type;
} FirmwareToBackendPacket;

typedef struct _BackendToFirmwarePacket { 
    pb_size_t which_type;
    union {
        Ack ack;
        GetSensorsList get_sensors_list;
        ClearSensorList clear_sensor_list;
        AddSensor add_sensor;
    } type;
} BackendToFirmwarePacket;


/* Helper constants for enums */
#define _AddSensorInfo_DEVICE_TYPE_MIN AddSensorInfo_DEVICE_TYPE_TI
#define _AddSensorInfo_DEVICE_TYPE_MAX AddSensorInfo_DEVICE_TYPE_CUSTOM
#define _AddSensorInfo_DEVICE_TYPE_ARRAYSIZE ((AddSensorInfo_DEVICE_TYPE)(AddSensorInfo_DEVICE_TYPE_CUSTOM+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define FirmwareToBackendPacket_init_default     {0, {SensorData_init_default}}
#define UUID_init_default                        {""}
#define Registration_init_default                {false, UUID_init_default, false, UUID_init_default}
#define SensorsStart_init_default                {0}
#define SensorsStop_init_default                 {0}
#define SensorsList_init_default                 {0, {SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default, SensorInfo_init_default}}
#define SensorInfo_init_default                  {"", ""}
#define SensorData_init_default                  {"", 0, {UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default, UUID_init_default}, 0, {0}}
#define BackendToFirmwarePacket_init_default     {0, {Ack_init_default}}
#define Ack_init_default                         {0}
#define GetSensorsList_init_default              {0}
#define ClearSensorList_init_default             {0}
#define AddSensor_init_default                   {0, {AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default, AddSensorInfo_init_default}}
#define AddSensorInfo_init_default               {false, SensorInfo_init_default, _AddSensorInfo_DEVICE_TYPE_MIN}
#define FirmwareToBackendPacket_init_zero        {0, {SensorData_init_zero}}
#define UUID_init_zero                           {""}
#define Registration_init_zero                   {false, UUID_init_zero, false, UUID_init_zero}
#define SensorsStart_init_zero                   {0}
#define SensorsStop_init_zero                    {0}
#define SensorsList_init_zero                    {0, {SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero, SensorInfo_init_zero}}
#define SensorInfo_init_zero                     {"", ""}
#define SensorData_init_zero                     {"", 0, {UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero, UUID_init_zero}, 0, {0}}
#define BackendToFirmwarePacket_init_zero        {0, {Ack_init_zero}}
#define Ack_init_zero                            {0}
#define GetSensorsList_init_zero                 {0}
#define ClearSensorList_init_zero                {0}
#define AddSensor_init_zero                      {0, {AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero, AddSensorInfo_init_zero}}
#define AddSensorInfo_init_zero                  {false, SensorInfo_init_zero, _AddSensorInfo_DEVICE_TYPE_MIN}

/* Field tags (for use in manual encoding/decoding) */
#define Ack_id_tag                               1
#define SensorInfo_address_tag                   1
#define SensorInfo_name_tag                      2
#define UUID_uuid_tag                            1
#define AddSensorInfo_sensor_info_tag            1
#define AddSensorInfo_device_type_tag            2
#define Registration_uuid_self_tag               1
#define Registration_uuid_user_tag               2
#define SensorData_origin_address_tag            1
#define SensorData_middle_uuids_tag              2
#define SensorData_temp_tag                      3
#define SensorData_humidity_tag                  4
#define SensorsList_sensor_info_tag              1
#define AddSensor_add_sensor_info_tag            4
#define FirmwareToBackendPacket_sensor_data_tag  2
#define FirmwareToBackendPacket_sensors_list_tag 17
#define FirmwareToBackendPacket_registration_tag 18
#define BackendToFirmwarePacket_ack_tag          1
#define BackendToFirmwarePacket_get_sensors_list_tag 2
#define BackendToFirmwarePacket_clear_sensor_list_tag 3
#define BackendToFirmwarePacket_add_sensor_tag   4

/* Struct field encoding specification for nanopb */
#define FirmwareToBackendPacket_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,sensor_data,type.sensor_data),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,sensors_list,type.sensors_list),  17) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,registration,type.registration),  18)
#define FirmwareToBackendPacket_CALLBACK NULL
#define FirmwareToBackendPacket_DEFAULT NULL
#define FirmwareToBackendPacket_type_sensor_data_MSGTYPE SensorData
#define FirmwareToBackendPacket_type_sensors_list_MSGTYPE SensorsList
#define FirmwareToBackendPacket_type_registration_MSGTYPE Registration

#define UUID_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   uuid,              1)
#define UUID_CALLBACK NULL
#define UUID_DEFAULT NULL

#define Registration_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  uuid_self,         1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  uuid_user,         2)
#define Registration_CALLBACK NULL
#define Registration_DEFAULT NULL
#define Registration_uuid_self_MSGTYPE UUID
#define Registration_uuid_user_MSGTYPE UUID

#define SensorsStart_FIELDLIST(X, a) \

#define SensorsStart_CALLBACK NULL
#define SensorsStart_DEFAULT NULL

#define SensorsStop_FIELDLIST(X, a) \

#define SensorsStop_CALLBACK NULL
#define SensorsStop_DEFAULT NULL

#define SensorsList_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, MESSAGE,  sensor_info,       1)
#define SensorsList_CALLBACK NULL
#define SensorsList_DEFAULT NULL
#define SensorsList_sensor_info_MSGTYPE SensorInfo

#define SensorInfo_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   address,           1) \
X(a, STATIC,   SINGULAR, STRING,   name,              2)
#define SensorInfo_CALLBACK NULL
#define SensorInfo_DEFAULT NULL

#define SensorData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   origin_address,    1) \
X(a, STATIC,   REPEATED, MESSAGE,  middle_uuids,      2) \
X(a, STATIC,   ONEOF,    FLOAT,    (type,temp,type.temp),   3) \
X(a, STATIC,   ONEOF,    FLOAT,    (type,humidity,type.humidity),   4)
#define SensorData_CALLBACK NULL
#define SensorData_DEFAULT NULL
#define SensorData_middle_uuids_MSGTYPE UUID

#define BackendToFirmwarePacket_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,ack,type.ack),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,get_sensors_list,type.get_sensors_list),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,clear_sensor_list,type.clear_sensor_list),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,add_sensor,type.add_sensor),   4)
#define BackendToFirmwarePacket_CALLBACK NULL
#define BackendToFirmwarePacket_DEFAULT NULL
#define BackendToFirmwarePacket_type_ack_MSGTYPE Ack
#define BackendToFirmwarePacket_type_get_sensors_list_MSGTYPE GetSensorsList
#define BackendToFirmwarePacket_type_clear_sensor_list_MSGTYPE ClearSensorList
#define BackendToFirmwarePacket_type_add_sensor_MSGTYPE AddSensor

#define Ack_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT64,    id,                1)
#define Ack_CALLBACK NULL
#define Ack_DEFAULT NULL

#define GetSensorsList_FIELDLIST(X, a) \

#define GetSensorsList_CALLBACK NULL
#define GetSensorsList_DEFAULT NULL

#define ClearSensorList_FIELDLIST(X, a) \

#define ClearSensorList_CALLBACK NULL
#define ClearSensorList_DEFAULT NULL

#define AddSensor_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, MESSAGE,  add_sensor_info,   4)
#define AddSensor_CALLBACK NULL
#define AddSensor_DEFAULT NULL
#define AddSensor_add_sensor_info_MSGTYPE AddSensorInfo

#define AddSensorInfo_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sensor_info,       1) \
X(a, STATIC,   SINGULAR, UENUM,    device_type,       2)
#define AddSensorInfo_CALLBACK NULL
#define AddSensorInfo_DEFAULT NULL
#define AddSensorInfo_sensor_info_MSGTYPE SensorInfo

extern const pb_msgdesc_t FirmwareToBackendPacket_msg;
extern const pb_msgdesc_t UUID_msg;
extern const pb_msgdesc_t Registration_msg;
extern const pb_msgdesc_t SensorsStart_msg;
extern const pb_msgdesc_t SensorsStop_msg;
extern const pb_msgdesc_t SensorsList_msg;
extern const pb_msgdesc_t SensorInfo_msg;
extern const pb_msgdesc_t SensorData_msg;
extern const pb_msgdesc_t BackendToFirmwarePacket_msg;
extern const pb_msgdesc_t Ack_msg;
extern const pb_msgdesc_t GetSensorsList_msg;
extern const pb_msgdesc_t ClearSensorList_msg;
extern const pb_msgdesc_t AddSensor_msg;
extern const pb_msgdesc_t AddSensorInfo_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define FirmwareToBackendPacket_fields &FirmwareToBackendPacket_msg
#define UUID_fields &UUID_msg
#define Registration_fields &Registration_msg
#define SensorsStart_fields &SensorsStart_msg
#define SensorsStop_fields &SensorsStop_msg
#define SensorsList_fields &SensorsList_msg
#define SensorInfo_fields &SensorInfo_msg
#define SensorData_fields &SensorData_msg
#define BackendToFirmwarePacket_fields &BackendToFirmwarePacket_msg
#define Ack_fields &Ack_msg
#define GetSensorsList_fields &GetSensorsList_msg
#define ClearSensorList_fields &ClearSensorList_msg
#define AddSensor_fields &AddSensor_msg
#define AddSensorInfo_fields &AddSensorInfo_msg

/* Maximum encoded size of messages (where known) */
#define Ack_size                                 11
#define AddSensorInfo_size                       59
#define AddSensor_size                           3904
#define BackendToFirmwarePacket_size             3907
#define ClearSensorList_size                     0
#define FirmwareToBackendPacket_size             3652
#define GetSensorsList_size                      0
#define Registration_size                        80
#define SensorData_size                          2579
#define SensorInfo_size                          55
#define SensorsList_size                         3648
#define SensorsStart_size                        0
#define SensorsStop_size                         0
#define UUID_size                                38

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
