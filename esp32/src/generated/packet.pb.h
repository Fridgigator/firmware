/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6 */

#ifndef PB_PACKET_PB_H_INCLUDED
#define PB_PACKET_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _ConnectedToWiFi { 
    char dummy_field;
} ConnectedToWiFi;

typedef struct _ConnectingToServer { 
    char dummy_field;
} ConnectingToServer;

typedef struct _ConnectingToWiFi { 
    char dummy_field;
} ConnectingToWiFi;

typedef struct _GetWiFi { 
    char dummy_field;
} GetWiFi;

typedef struct _GetWiFiConnectState { 
    char dummy_field;
} GetWiFiConnectState;

typedef struct _LoginError { 
    char dummy_field;
} LoginError;

typedef struct _Placeholder { 
    char dummy_field;
} Placeholder;

typedef struct _Timeout { 
    char dummy_field;
} Timeout;

typedef struct _FailedConnectingToServer { 
    int32_t causeid;
    char cause[32];
} FailedConnectingToServer;

typedef struct _LoginResponse { 
    pb_size_t which_type;
    union {
        LoginError login_error;
        Timeout timeout;
    } type;
} LoginResponse;

typedef struct _RegisterToken { 
    char uuid[37];
} RegisterToken;

typedef struct _WiFiConnectInfo { 
    char ssid[32];
    char password[64];
} WiFiConnectInfo;

typedef struct _WiFiData { 
    char ssid[32];
    uint64_t bssid;
    uint32_t Channel;
    bool isEncrypted;
} WiFiData;

typedef struct _BLESendPacket { 
    pb_size_t which_type;
    union {
        Placeholder placeholder;
        GetWiFi getWifi;
        WiFiConnectInfo wifiConnectInfo;
        GetWiFiConnectState getWiFiConnectState;
        RegisterToken token;
    } type;
} BLESendPacket;

typedef struct _WiFiConnectResponseInfo { 
    pb_size_t which_type;
    union {
        Placeholder placeholder;
        Timeout timeout;
        ConnectingToWiFi connectingToWiFi;
        ConnectedToWiFi connectedToWiFi;
        ConnectingToServer connectingToServer;
        FailedConnectingToServer failedConnectingToServer;
    } type;
} WiFiConnectResponseInfo;

typedef struct _WiFiVector { 
    pb_size_t data_count;
    WiFiData data[64];
} WiFiVector;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define BLESendPacket_init_default               {0, {Placeholder_init_default}}
#define Placeholder_init_default                 {0}
#define GetWiFi_init_default                     {0}
#define WiFiConnectInfo_init_default             {"", ""}
#define GetWiFiConnectState_init_default         {0}
#define RegisterToken_init_default               {""}
#define WiFiVector_init_default                  {0, {WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default}}
#define WiFiData_init_default                    {"", 0, 0, 0}
#define WiFiConnectResponseInfo_init_default     {0, {Placeholder_init_default}}
#define Timeout_init_default                     {0}
#define ConnectingToWiFi_init_default            {0}
#define ConnectedToWiFi_init_default             {0}
#define ConnectingToServer_init_default          {0}
#define FailedConnectingToServer_init_default    {0, ""}
#define LoginResponse_init_default               {0, {LoginError_init_default}}
#define LoginError_init_default                  {0}
#define BLESendPacket_init_zero                  {0, {Placeholder_init_zero}}
#define Placeholder_init_zero                    {0}
#define GetWiFi_init_zero                        {0}
#define WiFiConnectInfo_init_zero                {"", ""}
#define GetWiFiConnectState_init_zero            {0}
#define RegisterToken_init_zero                  {""}
#define WiFiVector_init_zero                     {0, {WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero}}
#define WiFiData_init_zero                       {"", 0, 0, 0}
#define WiFiConnectResponseInfo_init_zero        {0, {Placeholder_init_zero}}
#define Timeout_init_zero                        {0}
#define ConnectingToWiFi_init_zero               {0}
#define ConnectedToWiFi_init_zero                {0}
#define ConnectingToServer_init_zero             {0}
#define FailedConnectingToServer_init_zero       {0, ""}
#define LoginResponse_init_zero                  {0, {LoginError_init_zero}}
#define LoginError_init_zero                     {0}

/* Field tags (for use in manual encoding/decoding) */
#define FailedConnectingToServer_causeid_tag     1
#define FailedConnectingToServer_cause_tag       2
#define LoginResponse_login_error_tag            1
#define LoginResponse_timeout_tag                2
#define RegisterToken_uuid_tag                   1
#define WiFiConnectInfo_ssid_tag                 1
#define WiFiConnectInfo_password_tag             2
#define WiFiData_ssid_tag                        1
#define WiFiData_bssid_tag                       2
#define WiFiData_Channel_tag                     3
#define WiFiData_isEncrypted_tag                 4
#define BLESendPacket_placeholder_tag            1
#define BLESendPacket_getWifi_tag                2
#define BLESendPacket_wifiConnectInfo_tag        3
#define BLESendPacket_getWiFiConnectState_tag    4
#define BLESendPacket_token_tag                  5
#define WiFiConnectResponseInfo_placeholder_tag  1
#define WiFiConnectResponseInfo_timeout_tag      2
#define WiFiConnectResponseInfo_connectingToWiFi_tag 3
#define WiFiConnectResponseInfo_connectedToWiFi_tag 4
#define WiFiConnectResponseInfo_connectingToServer_tag 5
#define WiFiConnectResponseInfo_failedConnectingToServer_tag 6
#define WiFiVector_data_tag                      1

/* Struct field encoding specification for nanopb */
#define BLESendPacket_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,placeholder,type.placeholder),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,getWifi,type.getWifi),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,wifiConnectInfo,type.wifiConnectInfo),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,getWiFiConnectState,type.getWiFiConnectState),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,token,type.token),   5)
#define BLESendPacket_CALLBACK NULL
#define BLESendPacket_DEFAULT NULL
#define BLESendPacket_type_placeholder_MSGTYPE Placeholder
#define BLESendPacket_type_getWifi_MSGTYPE GetWiFi
#define BLESendPacket_type_wifiConnectInfo_MSGTYPE WiFiConnectInfo
#define BLESendPacket_type_getWiFiConnectState_MSGTYPE GetWiFiConnectState
#define BLESendPacket_type_token_MSGTYPE RegisterToken

#define Placeholder_FIELDLIST(X, a) \

#define Placeholder_CALLBACK NULL
#define Placeholder_DEFAULT NULL

#define GetWiFi_FIELDLIST(X, a) \

#define GetWiFi_CALLBACK NULL
#define GetWiFi_DEFAULT NULL

#define WiFiConnectInfo_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   ssid,              1) \
X(a, STATIC,   SINGULAR, STRING,   password,          2)
#define WiFiConnectInfo_CALLBACK NULL
#define WiFiConnectInfo_DEFAULT NULL

#define GetWiFiConnectState_FIELDLIST(X, a) \

#define GetWiFiConnectState_CALLBACK NULL
#define GetWiFiConnectState_DEFAULT NULL

#define RegisterToken_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   uuid,              1)
#define RegisterToken_CALLBACK NULL
#define RegisterToken_DEFAULT NULL

#define WiFiVector_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, MESSAGE,  data,              1)
#define WiFiVector_CALLBACK NULL
#define WiFiVector_DEFAULT NULL
#define WiFiVector_data_MSGTYPE WiFiData

#define WiFiData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   ssid,              1) \
X(a, STATIC,   SINGULAR, UINT64,   bssid,             2) \
X(a, STATIC,   SINGULAR, UINT32,   Channel,           3) \
X(a, STATIC,   SINGULAR, BOOL,     isEncrypted,       4)
#define WiFiData_CALLBACK NULL
#define WiFiData_DEFAULT NULL

#define WiFiConnectResponseInfo_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,placeholder,type.placeholder),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,timeout,type.timeout),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,connectingToWiFi,type.connectingToWiFi),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,connectedToWiFi,type.connectedToWiFi),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,connectingToServer,type.connectingToServer),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,failedConnectingToServer,type.failedConnectingToServer),   6)
#define WiFiConnectResponseInfo_CALLBACK NULL
#define WiFiConnectResponseInfo_DEFAULT NULL
#define WiFiConnectResponseInfo_type_placeholder_MSGTYPE Placeholder
#define WiFiConnectResponseInfo_type_timeout_MSGTYPE Timeout
#define WiFiConnectResponseInfo_type_connectingToWiFi_MSGTYPE ConnectingToWiFi
#define WiFiConnectResponseInfo_type_connectedToWiFi_MSGTYPE ConnectedToWiFi
#define WiFiConnectResponseInfo_type_connectingToServer_MSGTYPE ConnectingToServer
#define WiFiConnectResponseInfo_type_failedConnectingToServer_MSGTYPE FailedConnectingToServer

#define Timeout_FIELDLIST(X, a) \

#define Timeout_CALLBACK NULL
#define Timeout_DEFAULT NULL

#define ConnectingToWiFi_FIELDLIST(X, a) \

#define ConnectingToWiFi_CALLBACK NULL
#define ConnectingToWiFi_DEFAULT NULL

#define ConnectedToWiFi_FIELDLIST(X, a) \

#define ConnectedToWiFi_CALLBACK NULL
#define ConnectedToWiFi_DEFAULT NULL

#define ConnectingToServer_FIELDLIST(X, a) \

#define ConnectingToServer_CALLBACK NULL
#define ConnectingToServer_DEFAULT NULL

#define FailedConnectingToServer_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    causeid,           1) \
X(a, STATIC,   SINGULAR, STRING,   cause,             2)
#define FailedConnectingToServer_CALLBACK NULL
#define FailedConnectingToServer_DEFAULT NULL

#define LoginResponse_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,login_error,type.login_error),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,timeout,type.timeout),   2)
#define LoginResponse_CALLBACK NULL
#define LoginResponse_DEFAULT NULL
#define LoginResponse_type_login_error_MSGTYPE LoginError
#define LoginResponse_type_timeout_MSGTYPE Timeout

#define LoginError_FIELDLIST(X, a) \

#define LoginError_CALLBACK NULL
#define LoginError_DEFAULT NULL

extern const pb_msgdesc_t BLESendPacket_msg;
extern const pb_msgdesc_t Placeholder_msg;
extern const pb_msgdesc_t GetWiFi_msg;
extern const pb_msgdesc_t WiFiConnectInfo_msg;
extern const pb_msgdesc_t GetWiFiConnectState_msg;
extern const pb_msgdesc_t RegisterToken_msg;
extern const pb_msgdesc_t WiFiVector_msg;
extern const pb_msgdesc_t WiFiData_msg;
extern const pb_msgdesc_t WiFiConnectResponseInfo_msg;
extern const pb_msgdesc_t Timeout_msg;
extern const pb_msgdesc_t ConnectingToWiFi_msg;
extern const pb_msgdesc_t ConnectedToWiFi_msg;
extern const pb_msgdesc_t ConnectingToServer_msg;
extern const pb_msgdesc_t FailedConnectingToServer_msg;
extern const pb_msgdesc_t LoginResponse_msg;
extern const pb_msgdesc_t LoginError_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define BLESendPacket_fields &BLESendPacket_msg
#define Placeholder_fields &Placeholder_msg
#define GetWiFi_fields &GetWiFi_msg
#define WiFiConnectInfo_fields &WiFiConnectInfo_msg
#define GetWiFiConnectState_fields &GetWiFiConnectState_msg
#define RegisterToken_fields &RegisterToken_msg
#define WiFiVector_fields &WiFiVector_msg
#define WiFiData_fields &WiFiData_msg
#define WiFiConnectResponseInfo_fields &WiFiConnectResponseInfo_msg
#define Timeout_fields &Timeout_msg
#define ConnectingToWiFi_fields &ConnectingToWiFi_msg
#define ConnectedToWiFi_fields &ConnectedToWiFi_msg
#define ConnectingToServer_fields &ConnectingToServer_msg
#define FailedConnectingToServer_fields &FailedConnectingToServer_msg
#define LoginResponse_fields &LoginResponse_msg
#define LoginError_fields &LoginError_msg

/* Maximum encoded size of messages (where known) */
#define BLESendPacket_size                       100
#define ConnectedToWiFi_size                     0
#define ConnectingToServer_size                  0
#define ConnectingToWiFi_size                    0
#define FailedConnectingToServer_size            44
#define GetWiFiConnectState_size                 0
#define GetWiFi_size                             0
#define LoginError_size                          0
#define LoginResponse_size                       2
#define Placeholder_size                         0
#define RegisterToken_size                       38
#define Timeout_size                             0
#define WiFiConnectInfo_size                     98
#define WiFiConnectResponseInfo_size             46
#define WiFiData_size                            52
#define WiFiVector_size                          3456

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
