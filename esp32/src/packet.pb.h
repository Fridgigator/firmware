/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6 */

#ifndef PB_PACKET_PB_H_INCLUDED
#define PB_PACKET_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Ack { 
    char dummy_field;
} Ack;

typedef struct _EndOfTransmission { 
    char dummy_field;
} EndOfTransmission;

typedef struct _Placeholder { 
    char dummy_field;
} Placeholder;

typedef struct _WiFiData { 
    char SSID[15];
    uint64_t BSSID;
    uint32_t Channel;
    bool isEncrypted;
} WiFiData;

typedef struct _WiFiVector { 
    pb_size_t data_count;
    WiFiData data[64];
} WiFiVector;

typedef struct _Packet { 
    pb_size_t which_type;
    union {
        Placeholder placeholder;
        Ack ack;
        EndOfTransmission eot;
        WiFiVector wifi;
    } type;
} Packet;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Packet_init_default                      {0, {Placeholder_init_default}}
#define Placeholder_init_default                 {0}
#define Ack_init_default                         {0}
#define EndOfTransmission_init_default           {0}
#define WiFiVector_init_default                  {0, {WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default, WiFiData_init_default}}
#define WiFiData_init_default                    {"", 0, 0, 0}
#define Packet_init_zero                         {0, {Placeholder_init_zero}}
#define Placeholder_init_zero                    {0}
#define Ack_init_zero                            {0}
#define EndOfTransmission_init_zero              {0}
#define WiFiVector_init_zero                     {0, {WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero, WiFiData_init_zero}}
#define WiFiData_init_zero                       {"", 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define WiFiData_SSID_tag                        1
#define WiFiData_BSSID_tag                       2
#define WiFiData_Channel_tag                     3
#define WiFiData_isEncrypted_tag                 4
#define WiFiVector_data_tag                      1
#define Packet_placeholder_tag                   1
#define Packet_ack_tag                           2
#define Packet_eot_tag                           3
#define Packet_wifi_tag                          4

/* Struct field encoding specification for nanopb */
#define Packet_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,placeholder,type.placeholder),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,ack,type.ack),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,eot,type.eot),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,wifi,type.wifi),   4)
#define Packet_CALLBACK NULL
#define Packet_DEFAULT NULL
#define Packet_type_placeholder_MSGTYPE Placeholder
#define Packet_type_ack_MSGTYPE Ack
#define Packet_type_eot_MSGTYPE EndOfTransmission
#define Packet_type_wifi_MSGTYPE WiFiVector

#define Placeholder_FIELDLIST(X, a) \

#define Placeholder_CALLBACK NULL
#define Placeholder_DEFAULT NULL

#define Ack_FIELDLIST(X, a) \

#define Ack_CALLBACK NULL
#define Ack_DEFAULT NULL

#define EndOfTransmission_FIELDLIST(X, a) \

#define EndOfTransmission_CALLBACK NULL
#define EndOfTransmission_DEFAULT NULL

#define WiFiVector_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, MESSAGE,  data,              1)
#define WiFiVector_CALLBACK NULL
#define WiFiVector_DEFAULT NULL
#define WiFiVector_data_MSGTYPE WiFiData

#define WiFiData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   SSID,              1) \
X(a, STATIC,   SINGULAR, UINT64,   BSSID,             2) \
X(a, STATIC,   SINGULAR, UINT32,   Channel,           3) \
X(a, STATIC,   SINGULAR, BOOL,     isEncrypted,       4)
#define WiFiData_CALLBACK NULL
#define WiFiData_DEFAULT NULL

extern const pb_msgdesc_t Packet_msg;
extern const pb_msgdesc_t Placeholder_msg;
extern const pb_msgdesc_t Ack_msg;
extern const pb_msgdesc_t EndOfTransmission_msg;
extern const pb_msgdesc_t WiFiVector_msg;
extern const pb_msgdesc_t WiFiData_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Packet_fields &Packet_msg
#define Placeholder_fields &Placeholder_msg
#define Ack_fields &Ack_msg
#define EndOfTransmission_fields &EndOfTransmission_msg
#define WiFiVector_fields &WiFiVector_msg
#define WiFiData_fields &WiFiData_msg

/* Maximum encoded size of messages (where known) */
#define Ack_size                                 0
#define EndOfTransmission_size                   0
#define Packet_size                              2371
#define Placeholder_size                         0
#define WiFiData_size                            35
#define WiFiVector_size                          2368

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
